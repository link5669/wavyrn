"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = PlaylistControl;
var _Collapse2 = _interopRequireDefault(require("@mui/material/Collapse"));
var _Popover2 = _interopRequireDefault(require("@mui/material/Popover"));
var _QueueMusicRounded2 = _interopRequireDefault(require("@mui/icons-material/QueueMusicRounded"));
var _ShuffleRounded2 = _interopRequireDefault(require("@mui/icons-material/ShuffleRounded"));
var _ShuffleOnRounded2 = _interopRequireDefault(require("@mui/icons-material/ShuffleOnRounded"));
var _ToggleButton2 = _interopRequireDefault(require("@mui/material/ToggleButton"));
var _RepeatOneOnRounded2 = _interopRequireDefault(require("@mui/icons-material/RepeatOneOnRounded"));
var _RepeatOnRounded2 = _interopRequireDefault(require("@mui/icons-material/RepeatOnRounded"));
var _RepeatRounded2 = _interopRequireDefault(require("@mui/icons-material/RepeatRounded"));
var _Box2 = _interopRequireDefault(require("@mui/material/Box"));
var _react = _interopRequireWildcard(require("react"));
var _reactRedux = require("react-redux");
var _actionCreators = _interopRequireDefault(require("../../redux/actionCreators.js"));
var _styled = _interopRequireDefault(require("@mui/material/styles/styled"));
var _Playlist = _interopRequireDefault(require("./Playlist.js"));
var _types = require("../../redux/types");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
const PREFIX = "PlaylistControl";
const classes = {
  button: "".concat(PREFIX, "-button")
};
const RootBox = (0, _styled.default)(_Box2.default)(() => ({
  display: "flex",
  flexDirection: "column-reverse",
  alignItems: "center"
}));
const BouttonContainer = (0, _styled.default)(_Box2.default)(_ref => {
  let {
    theme
  } = _ref;
  return {
    width: "100%",
    display: "flex",
    flexDirection: "row",
    ["& .".concat(classes.button)]: {
      // space buttons horizontally
      margin: "auto ".concat(theme.spacing(1)),
      flexGrow: 1 // buttons should grow
    }
  };
});

function RepeatButton(props) {
  const {
    value,
    ...other
  } = props;
  return /*#__PURE__*/_react.default.createElement(_ToggleButton2.default, _extends({
    value: "repeat",
    selected: value !== _types.RepeatMode.NORMAL
  }, other), value === _types.RepeatMode.NORMAL ? /*#__PURE__*/_react.default.createElement(_RepeatRounded2.default, null) : value === _types.RepeatMode.REPEAT_ALL ? /*#__PURE__*/_react.default.createElement(_RepeatOnRounded2.default, null) : /*#__PURE__*/_react.default.createElement(_RepeatOneOnRounded2.default, null));
}
function ShuffleButton(props) {
  const {
    value,
    ...other
  } = props;
  return /*#__PURE__*/_react.default.createElement(_ToggleButton2.default, _extends({
    value: "shuffle",
    selected: value
  }, other), value ? /*#__PURE__*/_react.default.createElement(_ShuffleOnRounded2.default, null) : /*#__PURE__*/_react.default.createElement(_ShuffleRounded2.default, null));
}
function PlaylistControl(props) {
  const sx = props.sx;
  const playlistViewMode = props.playlistViewMode;
  const shuffled = (0, _reactRedux.useSelector)( /** @type {import("../../redux/types").useSelectCb} */
  state => state.shuffled);
  const repeatMode = (0, _reactRedux.useSelector)( /** @type {import("../../redux/types").useSelectCb} */
  state => state.repeatMode);
  const [playlistVisible, showPlaylist] = (0, _react.useState)(false);
  const [anchorEl, setAnchor] = (0, _react.useState)(null);
  const dispatch = (0, _reactRedux.useDispatch)();
  const onShuffle = bool => dispatch(_actionCreators.default.shuffle(bool));
  const onRepeat = mode => dispatch(_actionCreators.default.setRepeatMode(mode));
  const handlePopoverClose = () => {
    showPlaylist(false);
    setAnchor(null);
  };
  return /*#__PURE__*/_react.default.createElement(RootBox, {
    sx: {
      ...sx
    }
  }, /*#__PURE__*/_react.default.createElement(BouttonContainer, null, /*#__PURE__*/_react.default.createElement(RepeatButton, {
    value: repeatMode,
    className: classes.button,
    onClick: () => {
      switch (repeatMode) {
        case _types.RepeatMode.NORMAL:
          return onRepeat(_types.RepeatMode.REPEAT_ALL);
        case _types.RepeatMode.REPEAT_ALL:
          return onRepeat(_types.RepeatMode.REPEAT_ONE);
        case _types.RepeatMode.REPEAT_ONE:
          return onRepeat(_types.RepeatMode.NORMAL);
        default:
          return repeatMode;
      }
    }
  }), /*#__PURE__*/_react.default.createElement(ShuffleButton, {
    value: shuffled,
    className: classes.button,
    onClick: () => {
      onShuffle(!shuffled);
    }
  }), /*#__PURE__*/_react.default.createElement(_ToggleButton2.default, {
    className: classes.button,
    value: "show playlist",
    selected: playlistVisible,
    onChange: e => {
      setAnchor( /** @type {Node} */e.target.parentElement.parentElement.parentElement.parentElement);
      showPlaylist(!playlistVisible);
    }
  }, /*#__PURE__*/_react.default.createElement(_QueueMusicRounded2.default, null))), playlistViewMode === "popover" ? /*#__PURE__*/_react.default.createElement(_Popover2.default, {
    open: Boolean(anchorEl),
    anchorEl: anchorEl,
    onClose: handlePopoverClose,
    sx: {
      boxShadow: 8
    },
    anchorOrigin: {
      vertical: "top",
      horizontal: "right"
    },
    transformOrigin: {
      vertical: "bottom",
      horizontal: "right"
    }
  }, /*#__PURE__*/_react.default.createElement(_Playlist.default, {
    sx: {
      width: "400px",
      height: "60vh"
    }
  })) : /*#__PURE__*/_react.default.createElement(_Collapse2.default, {
    collapsedSize: "0",
    in: playlistVisible
  }, /*#__PURE__*/_react.default.createElement(_Playlist.default, {
    sx: {
      height: "60vh",
      width: "90vw"
    }
  })));
}