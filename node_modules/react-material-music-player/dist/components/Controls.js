"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = Controls;
var _Box2 = _interopRequireDefault(require("@mui/material/Box"));
var _react = _interopRequireDefault(require("react"));
var _reactRedux = require("react-redux");
var _IconButton = _interopRequireDefault(require("@mui/material/IconButton"));
var _SkipNextRounded = _interopRequireDefault(require("@mui/icons-material/SkipNextRounded"));
var _SkipPreviousRounded = _interopRequireDefault(require("@mui/icons-material/SkipPreviousRounded"));
var _PlayArrowRounded = _interopRequireDefault(require("@mui/icons-material/PlayArrowRounded"));
var _PauseRounded = _interopRequireDefault(require("@mui/icons-material/PauseRounded"));
var _actionCreators = _interopRequireDefault(require("../redux/actionCreators"));
var _withoutPropagation = _interopRequireDefault(require("../utils/withoutPropagation"));
var _types = require("../redux/types");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function Controls(props) {
  const sx = props.sx;
  const disabled = props.disabled === undefined ? false : props.disabled;
  const isSmall = props.isSmall;
  const mediaState = (0, _reactRedux.useSelector)( /** @type {import("../redux/types").useSelectCb} */
  _ref => {
    let {
      mediaState
    } = _ref;
    return mediaState;
  });
  const dispatch = (0, _reactRedux.useDispatch)();
  const onSkipNext = () => dispatch(_actionCreators.default.skipNext());
  const onSkipPrev = () => dispatch(_actionCreators.default.skipPrev());
  const onPlay = () => dispatch(_actionCreators.default.play());
  const onPause = () => dispatch(_actionCreators.default.pause());
  const playing = mediaState === _types.MediaState.PLAYING ? true : false;
  return /*#__PURE__*/_react.default.createElement(_Box2.default, {
    sx: {
      display: "flex",
      flexDirection: "row",
      justifyContent: "center",
      alignItems: "center",
      flexWrap: "nowrap",
      ...sx
    }
  }, !isSmall && /*#__PURE__*/_react.default.createElement(_IconButton.default, {
    onClick: (0, _withoutPropagation.default)(onSkipPrev),
    size: "large",
    disabled: disabled
  }, /*#__PURE__*/_react.default.createElement(_SkipPreviousRounded.default, {
    fontSize: "large"
  })), /*#__PURE__*/_react.default.createElement(_IconButton.default, {
    onClick: (0, _withoutPropagation.default)(playing ? onPause : onPlay),
    size: "large",
    disabled: disabled
  }, playing ? /*#__PURE__*/_react.default.createElement(_PauseRounded.default, {
    fontSize: "large"
  }) : /*#__PURE__*/_react.default.createElement(_PlayArrowRounded.default, {
    fontSize: "large"
  })), !isSmall && /*#__PURE__*/_react.default.createElement(_IconButton.default, {
    onClick: (0, _withoutPropagation.default)(onSkipNext),
    size: "large",
    disabled: disabled
  }, /*#__PURE__*/_react.default.createElement(_SkipNextRounded.default, {
    fontSize: "large"
  })));
}