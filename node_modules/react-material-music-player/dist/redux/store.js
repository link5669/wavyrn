"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _toolkit = require("@reduxjs/toolkit");
var _reducers = _interopRequireDefault(require("./reducers"));
var _audioOutput = _interopRequireDefault(require("./middleware/audioOutput.js"));
var _shuffler = _interopRequireDefault(require("./middleware/shuffler.js"));
var _nativeEventsHandler = _interopRequireDefault(require("./middleware/nativeEventsHandler.js"));
var _changeTrackHelper = _interopRequireDefault(require("./middleware/changeTrackHelper"));
var _updatePlaylistHelper = _interopRequireDefault(require("./middleware/updatePlaylistHelper"));
var _mediaSessionActions = _interopRequireDefault(require("./middleware/mediaSessionActions"));
var _skipHelper = _interopRequireDefault(require("./middleware/skipHelper"));
var _types = require("./types");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
var _default = exports.default = (0, _toolkit.configureStore)({
  reducer: _reducers.default,
  middleware: [_nativeEventsHandler.default, _shuffler.default, _updatePlaylistHelper.default, _mediaSessionActions.default, _changeTrackHelper.default, _audioOutput.default,
  // audio output might drop skip action
  _skipHelper.default // skip helper must come after audioOutput
  ],

  preloadedState: {
    mediaState: _types.MediaState.STOPPED,
    currentTrack: 0,
    shuffled: false,
    playlist: [],
    // single default empty track
    volume: 25,
    repeatMode: _types.RepeatMode.NORMAL
  }
});